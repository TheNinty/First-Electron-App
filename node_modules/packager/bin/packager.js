var argv, async, command, commands, config, env, exec, package, packages, positionOfCommand;
exec = require('child_process').exec;
require('colorodo');
argv = require('optimist').argv;
async = require('async');
config = {
  env: 'development',
  verbose: false,
  colors: true
};
positionOfCommand = 1;
if (argv.h || argv.help) {
  console.log("Usage: package [options] [command]");
  console.log();
  console.log("Options:");
  console.log("\t-h, --help - print this help");
  console.log("\t-e, --environment - specify environment");
  console.log("\t-v, --verbose - be more talkative");
  console.log("\t-n, --no-colors - no colors in the output");
  console.log();
  console.log("Commands:");
  console.log("\tinit - create empty Npmfile in the current directory");
  console.log("\tinstall - install all modules, which are specified in Npmfile");
  console.log("\tlist - list all modules, which are specified in Npmfile");
  process.exit();
}
if (argv.e || argv.environment) {
  config.env = argv.e || argv.environment;
  if ('production' !== config.env && 'development' !== config.env && 'testing' !== config.env) {
    console.log("[" + ("error".color('red')) + "] You should specify environment.");
    process.exit();
  }
}
if (argv.v || argv.verbose) {
  config.verbose = true;
}
if (argv.n || argv.colors === false) {
  config.colors = false;
}
command = argv._[0];
if (!command || ('init' !== command && 'install' !== command && 'list' !== command)) {
  console.log("[" + ("error".color('red')) + "] You should specify command.");
  process.exit();
}
packages = [];
package = function(name, version) {
  return packages.push(version ? "" + name + "@" + version : name);
};
env = function(name, packages) {
  if (config.env === name) {
    return packages();
  }
};
commands = {
  init: function() {
    exec('touch Npmfile');
    if (config.verbose) {
      return console.log("[" + ("success".color()) + "] Npmfile created.");
    }
  },
  install: function() {
    return exec('coffee -cbp Npmfile', function(err, stdout) {
      eval(stdout);
      return async.forEachSeries(packages, function(package, nextPackage) {
        return exec("npm install " + package, function(err, stdout, stderr) {
          if (config.verbose) {
            console.log(err ? "[" + ("error".color('red')) + "] " + package + " not installed." : "[" + ("success".color()) + "] " + package + " installed.");
          }
          return nextPackage();
        });
      }, function() {
        if (config.verbose) {
          return console.log("[" + ("success".color()) + "] Finished.");
        }
      });
    });
  },
  list: function() {
    return exec('coffee -cbp Npmfile', function(err, stdout) {
      eval(stdout);
      return async.forEachSeries(packages, function(package, nextPackage) {
        console.log("[" + ("package".color('yellow')) + "] " + package);
        return nextPackage();
      }, function() {});
    });
  }
};
commands[command]();